// <auto-generated />
using AP_4_LR2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AP_4_LR2.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20250503210931_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("AP_4_LR2.Models.ContentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StorageLocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StorageLocationId");

                    b.ToTable("ContentItems");

                    b.HasDiscriminator<string>("ContentType").HasValue("ContentItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AP_4_LR2.Models.StorageLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StorageLocations");
                });

            modelBuilder.Entity("AP_4_LR2.Models.Audio", b =>
                {
                    b.HasBaseType("AP_4_LR2.Models.ContentItem");

                    b.Property<int>("Bitrate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Audio");
                });

            modelBuilder.Entity("AP_4_LR2.Models.Book", b =>
                {
                    b.HasBaseType("AP_4_LR2.Models.ContentItem");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Pages")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Book");
                });

            modelBuilder.Entity("AP_4_LR2.Models.Document", b =>
                {
                    b.HasBaseType("AP_4_LR2.Models.ContentItem");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Document");
                });

            modelBuilder.Entity("AP_4_LR2.Models.Video", b =>
                {
                    b.HasBaseType("AP_4_LR2.Models.ContentItem");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resolution")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("ContentItems", t =>
                        {
                            t.Property("Duration")
                                .HasColumnName("Video_Duration");
                        });

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("AP_4_LR2.Models.ContentItem", b =>
                {
                    b.HasOne("AP_4_LR2.Models.StorageLocation", "StorageLocation")
                        .WithMany("Contents")
                        .HasForeignKey("StorageLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StorageLocation");
                });

            modelBuilder.Entity("AP_4_LR2.Models.StorageLocation", b =>
                {
                    b.Navigation("Contents");
                });
#pragma warning restore 612, 618
        }
    }
}
